# 3
# 24 000100100011010001010110
# 6 0017FE
# 24 001111001010111010010011


#1 123456
#2 000000000001011111111110
#3 3CAE93


# 2진수와 16진수 간 변환을 위한 딕셔너리
bin_to_hex_dict = {
    '0000': '0', '0001': '1', '0010': '2', '0011': '3',
    '0100': '4', '0101': '5', '0110': '6', '0111': '7',
    '1000': '8', '1001': '9', '1010': 'A', '1011': 'B',
    '1100': 'C', '1101': 'D', '1110': 'E', '1111': 'F'
}

# 16진수를 2진수로 변환하기 위한 딕셔너리
hex_to_bin_dict = {
    '0': '0000', '1': '0001', '2': '0010', '3': '0011',
    '4': '0100', '5': '0101', '6': '0110', '7': '0111',
    '8': '1000', '9': '1001', 'A': '1010', 'B': '1011',
    'C': '1100', 'D': '1101', 'E': '1110', 'F': '1111'
}

def convert_number(N, number):
    if N == 24:
# 2진수를 16진수로 변환
#코드에서 range(0, 24, 4) 부분은 시작값 0부터 24 미만까지의 숫자를 4씩 증가시키며 순회합니다. 
#그래서 i의 값은 순서대로 0, 4, 8, 12, 16, 20이 됩니다. 이를 통해 24자리 2진수 문자열을 4비트씩 구분하여 각 부분을 
# 16진수로 변환하는 과정에 사용됩니다.
        hex_result = ''.join(bin_to_hex_dict[number[i:i+4]] for i in range(0, 24, 4))
        return hex_result
    elif N == 6:
        # 16진수를 2진수로 변환
        binary_result = ''.join(hex_to_bin_dict[digit] for digit in number)
        return binary_result

# 입력값 받기
T = int(input())

for i in range(1, T+1):
    N, number = input().split()
    N = int(N)
    result = convert_number(N, number)
    print(f"#{i} {result}")
